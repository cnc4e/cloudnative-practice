issues:
  - title: EKSクラスタエンドポイントのアクセス制御
    body: |
      EKSクラスタのAPIサーバーへのアクセスを制御することで、セキュリティを向上させることができます。EKSクラスタのエンドポイントには、プライベートエンドポイントとパブリックエンドポイントがあり、それぞれ異なる特性を持ちます。

      ## エンドポイントの種類

      ### パブリックエンドポイント（デフォルト）
      - インターネット経由でAPIサーバーにアクセス可能
      - パブリックIPアドレスが割り当てられる
      - EKSの設定でアクセス可能なCIDRブロックを指定可能

      ### プライベートエンドポイント
      - VPC内からのみAPIサーバーにアクセス可能
      - プライベートIPアドレスが割り当てられる
      - クラスタのセキュリティグループでアクセス制御が可能

      ### パブリック + プライベート（混合モード）
      - 両方のエンドポイントが有効
      - 柔軟なアクセス制御が可能
      - 段階的な移行に適している

      ## セキュリティ上の考慮事項

      ### パブリックエンドポイントの場合
      - 必ずCIDRブロックでアクセス制限を設定する
      - 自組織のパブリックIPアドレスのみ許可
      - 0.0.0.0/0（全開放）は避ける

      ### プライベートエンドポイントの場合
      - VPC内にENI（Elastic Network Interface）が作成される
      - ノードからクラスターへの通信がVPC内で完結
      - ENIにはEKSクラスタのセキュリティグループが適用される

      ## 運用上の注意点

      ### パブリックエンドポイント使用時
      - CI/CDパイプラインからのアクセスが容易
      - 外部からの管理操作が可能

      ### プライベートエンドポイント使用時
      - CI/CDはVPC内リソースからの実行が必要
      - VPC内のbastion hostやVPN接続でアクセス可能

      ## 設定の移行

      プライベートからパブリック、またはその逆への変更は可能ですが、以下の点に注意：
      - CI/CDパイプラインの設定変更が必要
      - DNS解決の動作が変更される

      # プラクティス
      - EKSクラスタのエンドポイント設定を確認・変更する
        - 作業端末がEKSと同じネットワークの場合
          - EKSのパブリックエンドポイントを無効にする
          - クラスタのセキュリティグループに作業端末のIPアドレスを追加
        - 作業端末がEKS外部のネットワークの場合
          - EKSのパブリックエンドポイントを有効にする
          - エンドポイントのアクセス制限で作業端末のIPアドレスを許可する

  - title: EKSアクセスエントリーによる認証・認可の管理
    body: |
      EKSアクセスエントリー（Access Entry）は、EKSクラスタへのアクセス管理を効率化する機能です。従来のaws-authConfigMapに代わる新しいアクセス管理手法として、より安全で管理しやすい方法を提供します。

      [EKS アクセスエントリを使用して Kubernetes へのアクセスを IAM ユーザーに許可する](https://docs.aws.amazon.com/ja_jp/eks/latest/userguide/access-entries.html)

      ## アクセスエントリーの概要

      ### 従来の課題（aws-auth ConfigMap）
      - ConfigMapの直接編集が必要で運用が複雑
      - 設定ミスによるクラスタアクセス喪失のリスク
      - IAMユーザー/ロールとKubernetesユーザーのマッピングが不透明

      ### アクセスエントリーの利点
      - AWS APIを通じた管理で運用が簡素化
      - IAMロール/ユーザーとKubernetes権限の明確な関連付け
      - Terraformなどのインフラコードでの管理が容易
      - 設定変更時のクラスタアクセス喪失リスクの軽減

      ## アクセスエントリーの種類

      ### 標準アクセスエントリー
      - IAMプリンシパル（ユーザー/ロール）を直接マッピング
      - Kubernetesグループへの所属を定義
      - カスタムポリシーやクラスタポリシーを適用可能

      ### EKS管理ポリシー
      AWSが提供する定義済みポリシー：
      - `AmazonEKSClusterAdminPolicy` - クラスタ管理者権限
      - `AmazonEKSAdminPolicy` - 標準管理者権限
      - `AmazonEKSEditPolicy` - リソース編集権限
      - `AmazonEKSViewPolicy` - 読み取り専用権限

      ## セキュリティのベストプラクティス

      ### 最小権限の原則
      - ユーザー/ロールに必要最小限の権限のみ付与
      - 開発・ステージング・本番環境で権限を分離
      - 一時的なアクセスには期限付きロールを使用

      ### ロールベースの管理
      - 個人ユーザーではなくIAMロールを使用
      - 部署・チーム単位でのロール分割
      - 外部IDプロバイダーとの連携（OIDC/SAML）

      # プラクティス
      - EKSクラスタにアクセスエントリーを設定するTerraformコードを作成する
        - 任意の追加のIAMユーザー/ロールのアクセスエントリーを作成する
        - 上記アクセスエントリーに任意のポリシーを適用する

  - title: EKSクラスタの監査ログ有効化
    body: |
      EKSクラスタの監査ログ（Audit Log）を有効化することで、クラスタでの全てのAPI操作を記録し、セキュリティインシデントの調査や法令遵守（コンプライアンス）に役立てることができます。

      [Amazon EKS コントロールプレーンのログ記録](https://docs.aws.amazon.com/ja_jp/eks/latest/userguide/control-plane-logs.html)

      ## 監査ログの概要

      ### EKSで有効化できるログタイプ
      - **api** - Kubernetes API サーバーのログ
      - **audit** - Kubernetes 監査ログ（重要）
      - **authenticator** - AWS IAM Authenticator のログ
      - **controllerManager** - Kubernetes コントローラーマネージャーのログ
      - **scheduler** - Kubernetes スケジューラーのログ

      ### 監査ログの重要性
      - すべてのKubernetes APIへのリクエストを記録
      - 誰が、いつ、何を実行したかを追跡可能
      - セキュリティインシデントの調査に必要
      - コンプライアンス要件の遵守に必要

      ## 監査ログで記録される情報

      ### リクエスト情報
      - APIエンドポイント（例：/api/v1/pods）
      - HTTPメソッド（GET、POST、PUT、DELETE）
      - リクエスト元のユーザー情報
      - リクエスト時刻とレスポンス時刻

      ### 認証・認可情報
      - IAMユーザー/ロール情報
      - Kubernetesユーザー/グループ情報
      - 認可の成功/失敗状況

      ### リソース操作情報
      - 操作対象のKubernetesリソース
      - 作成・変更・削除されたオブジェクトの詳細
      - リクエスト結果（成功・失敗）

      ## CloudWatch Logsでの監査ログ分析

      ### ログストリーム構成
      監査ログは以下の形式でCloudWatchログストリームに出力されます。EKSはロググループがない場合、自動で作成します。ただし、自動で作成するロググループは有効期限が設定されていないため、手動で作成することを推奨します。
      ```
      /aws/eks/<cluster-name>/cluster
      ```

      # プラクティス
      - eksモジュールを拡張する
        - EKSクラスタのログを出力するCloudWatch Logsのロググループを作成する
          - 任意の有効期限を設定する
        - EKSクラスタで監査ログを有効化する
          - cluster loggingの設定し監査ログ（audit）を出力させる
          - (監査ログ以外も任意で有効にして良い)

      # 更に発展的なプラクティス
      このプラクティスは余裕がなければやらなくてもいいです。

      - EKSクラスタの監査ログをS3バケットに出力する
        - CloudWatch LogsからS3バケットへのエクスポートを設定する
      - S3の監査ログの分析をAthenaで行う